// <auto-generated />
using System;
using InventarioPED.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventarioPED.Data.Migrations
{
    [DbContext(typeof(InventarioDBContext))]
    [Migration("20250521000855_Inventariodb")]
    partial class Inventariodb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventarioPED.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Computadoras y Laptops"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Periféricos"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Monitores y Pantallas"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Almacenamiento"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Conectividad"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Impresoras"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Monitores"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Audio y Video"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Tablets y Relojes"
                        });
                });

            modelBuilder.Entity("InventarioPED.Models.Envio", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<int>("PrioridadId")
                        .HasColumnType("int");

                    b.Property<string>("ProductoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("PrioridadId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Envios");

                    b.HasData(
                        new
                        {
                            Id = "ENV20251",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Direccion = "Av. Reforma 123, Ciudad de México",
                            EstadoId = 2,
                            Nombre = "Juan Pérez",
                            Peso = 2.5f,
                            PrioridadId = 1,
                            ProductoId = "PROD20251"
                        },
                        new
                        {
                            Id = "ENV20252",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Direccion = "Calle Juárez 456, Guadalajara",
                            EstadoId = 3,
                            Nombre = "María López",
                            Peso = 1.2f,
                            PrioridadId = 2,
                            ProductoId = "PROD20252"
                        },
                        new
                        {
                            Id = "ENV20253",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Direccion = "Blvd. Independencia 789, Monterrey",
                            EstadoId = 1,
                            Nombre = "Carlos García",
                            Peso = 3.7f,
                            PrioridadId = 3,
                            ProductoId = "PROD20253"
                        },
                        new
                        {
                            Id = "ENV20254",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Direccion = "Av. Universidad 321, Puebla",
                            EstadoId = 1,
                            Nombre = "Ana Torres",
                            Peso = 1.9f,
                            PrioridadId = 2,
                            ProductoId = "PROD20254"
                        },
                        new
                        {
                            Id = "ENV20255",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Direccion = "Calle Morelos 654, Mérida",
                            EstadoId = 2,
                            Nombre = "Luis Fernández",
                            Peso = 2.2f,
                            PrioridadId = 1,
                            ProductoId = "PROD20255"
                        });
                });

            modelBuilder.Entity("InventarioPED.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Pendiente"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "En Proceso"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Completado"
                        });
                });

            modelBuilder.Entity("InventarioPED.Models.Prioridad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Prioridades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Alta"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Media"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Baja"
                        });
                });

            modelBuilder.Entity("InventarioPED.Models.Producto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = "PROD20251",
                            Cantidad = 20,
                            CategoriaId = 1,
                            Descripcion = "Computadora para el uso diario",
                            FechaCreacion = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Computadora",
                            Precio = 150.2m,
                            ProveedorId = 2
                        },
                        new
                        {
                            Id = "PROD20252",
                            Cantidad = 10,
                            CategoriaId = 1,
                            Descripcion = "UPS Forza 1000VA",
                            FechaCreacion = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "UPS FORZA",
                            Precio = 120.0m,
                            ProveedorId = 2
                        },
                        new
                        {
                            Id = "PROD20253",
                            Cantidad = 50,
                            CategoriaId = 2,
                            Descripcion = "Mouse óptico con RGB",
                            FechaCreacion = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Mouse Gamer",
                            Precio = 25.5m,
                            ProveedorId = 1
                        },
                        new
                        {
                            Id = "PROD20254",
                            Cantidad = 30,
                            CategoriaId = 2,
                            Descripcion = "Teclado retroiluminado",
                            FechaCreacion = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Teclado Mecánico",
                            Precio = 60.0m,
                            ProveedorId = 1
                        },
                        new
                        {
                            Id = "PROD20255",
                            Cantidad = 15,
                            CategoriaId = 1,
                            Descripcion = "Monitor Full HD",
                            FechaCreacion = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Monitor 24\"",
                            Precio = 200.0m,
                            ProveedorId = 3
                        },
                        new
                        {
                            Id = "PROD20256",
                            Cantidad = 25,
                            CategoriaId = 3,
                            Descripcion = "Router doble banda",
                            FechaCreacion = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Router WiFi",
                            Precio = 80.0m,
                            ProveedorId = 2
                        },
                        new
                        {
                            Id = "PROD20257",
                            Cantidad = 40,
                            CategoriaId = 4,
                            Descripcion = "Unidad de estado sólido",
                            FechaCreacion = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Disco SSD 512GB",
                            Precio = 95.0m,
                            ProveedorId = 1
                        },
                        new
                        {
                            Id = "PROD20258",
                            Cantidad = 12,
                            CategoriaId = 1,
                            Descripcion = "Laptop de gama media",
                            FechaCreacion = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Laptop i5",
                            Precio = 600.0m,
                            ProveedorId = 3
                        },
                        new
                        {
                            Id = "PROD20259",
                            Cantidad = 35,
                            CategoriaId = 5,
                            Descripcion = "Bocinas portátiles",
                            FechaCreacion = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Bocinas Bluetooth",
                            Precio = 45.0m,
                            ProveedorId = 2
                        },
                        new
                        {
                            Id = "PROD20260",
                            Cantidad = 100,
                            CategoriaId = 6,
                            Descripcion = "Cable HDMI 2 metros",
                            FechaCreacion = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Cable HDMI",
                            Precio = 10.0m,
                            ProveedorId = 1
                        },
                        new
                        {
                            Id = "PROD20261",
                            Cantidad = 25,
                            CategoriaId = 4,
                            Descripcion = "DDR4 3200MHz",
                            FechaCreacion = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Memoria RAM 16GB",
                            Precio = 85.0m,
                            ProveedorId = 3
                        },
                        new
                        {
                            Id = "PROD20262",
                            Cantidad = 8,
                            CategoriaId = 4,
                            Descripcion = "6GB GDDR6",
                            FechaCreacion = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Tarjeta Gráfica RTX 3060",
                            Precio = 350.0m,
                            ProveedorId = 2
                        },
                        new
                        {
                            Id = "PROD20263",
                            Cantidad = 18,
                            CategoriaId = 7,
                            Descripcion = "Con ventiladores RGB",
                            FechaCreacion = new DateTime(2025, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Gabinete ATX",
                            Precio = 70.0m,
                            ProveedorId = 1
                        },
                        new
                        {
                            Id = "PROD20264",
                            Cantidad = 22,
                            CategoriaId = 7,
                            Descripcion = "Certificación 80 Plus",
                            FechaCreacion = new DateTime(2025, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Fuente 600W",
                            Precio = 60.0m,
                            ProveedorId = 2
                        },
                        new
                        {
                            Id = "PROD20265",
                            Cantidad = 45,
                            CategoriaId = 5,
                            Descripcion = "Cámara 1080p",
                            FechaCreacion = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Webcam HD",
                            Precio = 40.0m,
                            ProveedorId = 3
                        },
                        new
                        {
                            Id = "PROD20266",
                            Cantidad = 27,
                            CategoriaId = 5,
                            Descripcion = "Con micrófono incluido",
                            FechaCreacion = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Headset Gamer",
                            Precio = 55.0m,
                            ProveedorId = 1
                        },
                        new
                        {
                            Id = "PROD20267",
                            Cantidad = 16,
                            CategoriaId = 8,
                            Descripcion = "Sistema Android",
                            FechaCreacion = new DateTime(2025, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Tablet 10\"",
                            Precio = 180.0m,
                            ProveedorId = 3
                        },
                        new
                        {
                            Id = "PROD20268",
                            Cantidad = 60,
                            CategoriaId = 6,
                            Descripcion = "Carga rápida",
                            FechaCreacion = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Cargador USB-C",
                            Precio = 18.0m,
                            ProveedorId = 2
                        },
                        new
                        {
                            Id = "PROD20269",
                            Cantidad = 40,
                            CategoriaId = 6,
                            Descripcion = "Convertidor",
                            FechaCreacion = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Adaptador HDMI-VGA",
                            Precio = 12.0m,
                            ProveedorId = 1
                        },
                        new
                        {
                            Id = "PROD20270",
                            Cantidad = 13,
                            CategoriaId = 3,
                            Descripcion = "8 puertos",
                            FechaCreacion = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Switch Ethernet",
                            Precio = 30.0m,
                            ProveedorId = 3
                        },
                        new
                        {
                            Id = "PROD20271",
                            Cantidad = 11,
                            CategoriaId = 9,
                            Descripcion = "Impresora monocromática",
                            FechaCreacion = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Impresora Láser",
                            Precio = 150.0m,
                            ProveedorId = 2
                        },
                        new
                        {
                            Id = "PROD20272",
                            Cantidad = 14,
                            CategoriaId = 9,
                            Descripcion = "Escáner plano A4",
                            FechaCreacion = new DateTime(2025, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Scanner",
                            Precio = 90.0m,
                            ProveedorId = 1
                        },
                        new
                        {
                            Id = "PROD20273",
                            Cantidad = 19,
                            CategoriaId = 8,
                            Descripcion = "Monitor de salud",
                            FechaCreacion = new DateTime(2025, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Smartwatch",
                            Precio = 130.0m,
                            ProveedorId = 2
                        },
                        new
                        {
                            Id = "PROD20274",
                            Cantidad = 30,
                            CategoriaId = 6,
                            Descripcion = "Con ventilación",
                            FechaCreacion = new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Base para Laptop",
                            Precio = 22.0m,
                            ProveedorId = 3
                        },
                        new
                        {
                            Id = "PROD20275",
                            Cantidad = 55,
                            CategoriaId = 6,
                            Descripcion = "Superficie extendida",
                            FechaCreacion = new DateTime(2025, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Mouse Pad XL",
                            Precio = 15.0m,
                            ProveedorId = 1
                        });
                });

            modelBuilder.Entity("InventarioPED.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "TechGlobal S.A."
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "InnovaTech Solutions"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Hardware Express"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "CompuCentro Mayorista"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "RedNet Distribuciones"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Digital Zone Ltd."
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "PeriTech MX"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "SmartComponentes"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "SoftWareHouse Corp."
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "GamingPro Distribuciones"
                        });
                });

            modelBuilder.Entity("InventarioPED.Models.Envio", b =>
                {
                    b.HasOne("InventarioPED.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventarioPED.Models.Prioridad", "Prioridad")
                        .WithMany()
                        .HasForeignKey("PrioridadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventarioPED.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Prioridad");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("InventarioPED.Models.Producto", b =>
                {
                    b.HasOne("InventarioPED.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventarioPED.Models.Proveedor", "Proveedor")
                        .WithMany("Productos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("InventarioPED.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("InventarioPED.Models.Proveedor", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
